@model IEnumerable<Product>

@{
    var key = ViewData["key"] as string;
}

@section Links{
  
    <link href="~/css/card-carousel-slider.css" rel="stylesheet" />
    <link href="~/css/search-autocomplete.css" rel="stylesheet" />
    <link href="~/css/gird-card-product.css" rel="stylesheet" />
    <link href="~/css/hotline.css" rel="stylesheet" />
   
}


@section breadcrumb{

    <li class="breadcrumb-item active" aria-current="page">@key</li>
}

   

<div class="container">
    @if (Model.Count() <= 0)
    {
        <div class="alert alert-primary" role="alert">
            Không có kết quả tìm kiếm cho từ khóa <span class="fw-bold">@key</span>
        </div>
    }else
    {
        @await Component.InvokeAsync("GirdCardProduct" ,Model)
    }
    
</div>


<partial name="_HotLinePartial" />


@section Scripts{
   
   <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
   <script src="~/js/search-index.js"></script>
    
}
